{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169714", "id": 43}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169555", "id": 15}
{"buggy_code": "module arith_877(input rst, data, output q); assign q = rst & data | b; endmodule", "correct_code": "module arith_877(input rst, data, output q); assign q = (rst & data) | b; endmodule", "comments": "Logic gate with proper operator precedence", "error_type": "missing_parentheses", "template_name": "logic_gate", "generated_at": "2025-09-26T06:01:50.169574", "id": 18}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169704", "id": 41}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169725", "id": 45}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169539", "id": 12}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169638", "id": 29}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169589", "id": 21}
{"buggy_code": "module test_606(input rst, output result); assign result = rst + 1; endmodule", "correct_code": "module test_606(input rst, output result); assign result = rst; endmodule", "comments": "Simple wire connection module", "error_type": "unnecessary_arithmetic", "template_name": "simple_assign", "generated_at": "2025-09-26T06:01:50.169674", "id": 36}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169709", "id": 42}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169657", "id": 33}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169594", "id": 22}
{"buggy_code": "module arith_715(input a, en, output out); assign out = a & en | a; endmodule", "correct_code": "module arith_715(input a, en, output out); assign out = (a & en) | a; endmodule", "comments": "Logic gate with proper operator precedence", "error_type": "missing_parentheses", "template_name": "logic_gate", "generated_at": "2025-09-26T06:01:50.169501", "id": 5}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169744", "id": 49}
{"buggy_code": "module test_760(input rst, output q); assign q = rst + 1; endmodule", "correct_code": "module test_760(input rst, output q); assign q = rst; endmodule", "comments": "Simple wire connection module", "error_type": "unnecessary_arithmetic", "template_name": "simple_assign", "generated_at": "2025-09-26T06:01:50.169687", "id": 38}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169579", "id": 19}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169653", "id": 32}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169739", "id": 48}
{"buggy_code": "module test_699(input a, output prod); assign prod = a + 1; endmodule", "correct_code": "module test_699(input a, output prod); assign prod = a; endmodule", "comments": "Simple wire connection module", "error_type": "unnecessary_arithmetic", "template_name": "simple_assign", "generated_at": "2025-09-26T06:01:50.169663", "id": 34}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169734", "id": 47}
{"buggy_code": "module test_61(input c, in, output result); assign result = c & in | d; endmodule", "correct_code": "module test_61(input c, in, output result); assign result = (c & in) | d; endmodule", "comments": "Logic gate with proper operator precedence", "error_type": "missing_parentheses", "template_name": "logic_gate", "generated_at": "2025-09-26T06:01:50.169515", "id": 7}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169559", "id": 16}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169584", "id": 20}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169730", "id": 46}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169529", "id": 10}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169481", "id": 2}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169629", "id": 27}
{"buggy_code": "module simple_595(input en, en, output result); assign result = en & en | a; endmodule", "correct_code": "module simple_595(input en, en, output result); assign result = (en & en) | a; endmodule", "comments": "Logic gate with proper operator precedence", "error_type": "missing_parentheses", "template_name": "logic_gate", "generated_at": "2025-09-26T06:01:50.169720", "id": 44}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169643", "id": 30}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169634", "id": 28}
{"buggy_code": "module arith_603(input c, output q); assign q = c + 1; endmodule", "correct_code": "module arith_603(input c, output q); assign q = c; endmodule", "comments": "Simple wire connection module", "error_type": "unnecessary_arithmetic", "template_name": "simple_assign", "generated_at": "2025-09-26T06:01:50.169545", "id": 13}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169457", "id": 0}
{"buggy_code": "assign out = sel ? in1; in0;", "correct_code": "assign out = sel ? in1 : in0;", "comments": "2-to-1 multiplexer with conditional assignment", "error_type": "syntax_error", "template_name": "mux_2to1", "generated_at": "2025-09-26T06:01:50.169519", "id": 8}
{"buggy_code": "always @(posedge clk) begin q = d; end", "correct_code": "always @(posedge clk) begin q <= d; end", "comments": "D flip-flop register with non-blocking assignment", "error_type": "blocking_assignment", "template_name": "dff_register", "generated_at": "2025-09-26T06:01:50.169525", "id": 9}
{"buggy_code": "always @(posedge clk) begin if (!rst_n) count <= 0; else count <= count + 1; end", "correct_code": "always @(posedge clk, negedge rst_n) begin if (!rst_n) count <= 0; else count <= count + 1; end", "comments": "Counter with proper reset sensitivity", "error_type": "clock_sensitivity", "template_name": "counter", "generated_at": "2025-09-26T06:01:50.169564", "id": 17}
